<?xml version="1.0" standalone="yes" ?>
<scenario>
--Name: chess
--URL: https://github.com/zetaglest/chess
--Description: 2 player chess with Indian faction on a 64x64 map
--Goal: Your fire golem must survive
--By Andy Alt and Jammyjamjamman
--License: GNU GPLv3
<difficulty value="4"/>
<players>
	<player control="human" faction="indian" team="1"/>
	<player control="network" faction="indian" team="2"/>
	<player control="closed"/>
	<player control="closed"/>
</players>
<map value="forest_for_four"/>
<tileset value="autumn"/>
<tech-tree value="megapack"/>
	<default-resources value="true"/>
	<default-units value="false"/>
	<default-victory-conditions value="false"/>
	--<fog-of-war value="false"/>

	<scripts>
		<startup>

			-- Create all pieces.
			function createAll(startUnits, kingUnit, numPlayers)
				kings = createKings(kingUnit, numPlayers)
				return kings
			end

			-- Number of players
			nPlayers = 2

			-- Create the kings (fire golems).
            kings = {}
			for playerNum=0,nPlayers-1
			do
				createUnit("fire_golem", playerNum, startLocation(playerNum))
				kings[playerNum] = lastCreatedUnit()
			end

			for playerNum=0, nPlayers-1
			do
				for stickfighters=0, 7
				do
					createUnit("stickfighter", playerNum, startLocation(playerNum))
				end
				createUnit("fire_archer", playerNum, startLocation(playerNum))
				createUnit("fire_archer", playerNum, startLocation(playerNum))
				createUnit("spearman", playerNum, startLocation(playerNum))
				createUnit("spearman", playerNum, startLocation(playerNum))
				createUnit("horseman", playerNum, startLocation(playerNum))
				createUnit("horseman", playerNum, startLocation(playerNum))
				createUnit("thunderbird", playerNum, startLocation(playerNum))
			end

			-- Used later to determine the end of the game.
			playersLeft = nPlayers

			-- Tell the player what to do.
			showMessage('game_brief', 'Chess')
		</startup>


		<unitDied>

			unitKilled = lastDeadUnit()

			for player, king in pairs(kings)
			do
				-- Check if the killed unit is the king.
				if unitKilled == king
				then
					-- Delete the killed king.
					kings[player] = nil
					-- Decrement the number of remaining players.
					playersLeft = playersLeft - 1
				end
			end

			-- Set the winner if there's only 1 player alive.
			if playersLeft == 1
			then
				for player, king in pairs(kings)
				do
					clearDisplayText()
					setPlayerAsWinner(player)
					endGame()
				end
			end

		</unitDied>



	</scripts>
</scenario>
